{"version":3,"sources":["pages/Cast.jsx"],"names":["Cast","state","castList","match","this","props","API","params","movieId","then","res","setState","data","cast","catch","err","Error","length","map","el","key","id","src","profile_path","alt","name","character","Component"],"mappings":"gMAIMA,E,2MASJC,MAAQ,CACNC,SAAU,I,mFAGS,IAAD,OACVC,EAAUC,KAAKC,MAAfF,MAERG,IAAmBH,EAAMI,OAAOC,SAC7BC,MAAK,SAAAC,GAAG,OAAI,EAAKC,SAAS,CAAET,SAAUQ,EAAIE,KAAKC,UAC/CC,OAAM,SAAAC,GACL,MAAM,IAAIC,MAAMD,Q,+BAIZ,IACAb,EAAaE,KAAKH,MAAlBC,SAER,OACE,6BACGA,EAASe,OAAS,GACjB,4BACGf,EAASgB,KAAI,SAAAC,GAAE,OACd,wBAAIC,IAAKD,EAAGE,IACV,yBACEC,IAAG,yCAAoCH,EAAGI,cAC1CC,IAAKL,EAAGM,OAEV,2BAAIN,EAAGM,MACP,gDAAkBN,EAAGO,sB,GArClBC,aA+CJ3B","file":"static/js/cast-page.7d1be001.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport T from 'prop-types';\nimport * as API from '../services/movie_api';\n\nclass Cast extends Component {\n  static propTypes = {\n    match: T.shape({\n      params: T.shape({\n        movieId: T.string,\n      }),\n    }).isRequired,\n  };\n\n  state = {\n    castList: [],\n  };\n\n  componentDidMount() {\n    const { match } = this.props;\n\n    API.fetchMovieCast(match.params.movieId)\n      .then(res => this.setState({ castList: res.data.cast }))\n      .catch(err => {\n        throw new Error(err);\n      });\n  }\n\n  render() {\n    const { castList } = this.state;\n\n    return (\n      <div>\n        {castList.length > 0 && (\n          <ul>\n            {castList.map(el => (\n              <li key={el.id}>\n                <img\n                  src={`https://image.tmdb.org/t/p/w200${el.profile_path}`}\n                  alt={el.name}\n                />\n                <p>{el.name}</p>\n                <p>{`Character: ${el.character}`}</p>\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Cast;\n"],"sourceRoot":""}