{"version":3,"sources":["services/movie_api.js","components/AdditionalInformation/AdditionalInformation.jsx","pages/MovieDetailsPage.jsx"],"names":["BASE_URL","API_KEY","fetchMostPopularMovies","axios","get","fetchMovieByQuery","query","fetchDetailsAboutMovie","id","fetchMovieCast","fetchMovieReviews","AdditionalInformation","movieId","location","to","pathname","state","from","AsyncCast","lazy","AsyncRewiews","MovieDetailsPage","movieDetails","onGoBack","props","history","push","match","this","API","params","then","res","setState","data","catch","err","Error","type","onClick","original_title","vote_average","overview","genres","length","map","genre","key","name","src","poster_path","alt","fallback","path","component","Component"],"mappings":"qHAAA,+LAEMA,EAAW,+BACXC,EAAU,mCAEHC,EAAyB,WACpC,OAAOC,IAAMC,IAAN,UAAaJ,EAAb,uCAAoDC,KAGhDI,EAAoB,SAAAC,GAC/B,OAAOH,IAAMC,IAAN,UACFJ,EADE,iCAC+BC,EAD/B,kBACgDK,KAI5CC,EAAyB,SAAAC,GACpC,OAAOL,IAAMC,IAAN,UAAaJ,EAAb,kBAA+BQ,EAA/B,oBAA6CP,KAGzCQ,EAAiB,SAAAD,GAC5B,OAAOL,IAAMC,IAAN,UAAaJ,EAAb,kBAA+BQ,EAA/B,4BAAqDP,KAGjDS,EAAoB,SAAAF,GAC/B,OAAOL,IAAMC,IAAN,UAAaJ,EAAb,kBAA+BQ,EAA/B,4BAAqDP,M,yHCW/CU,EA/Be,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,SAAZ,OAC5B,6BACE,kBAAC,IAAD,CACEC,GAAI,CACFC,SAAS,WAAD,OAAaH,EAAb,SACRI,MAAO,CAAEC,KAAK,eAAMJ,MAHxB,QAQA,6BACA,kBAAC,IAAD,CACEC,GAAI,CACFC,SAAS,WAAD,OAAaH,EAAb,YACRI,MAAO,CAAEC,KAAK,eAAMJ,MAHxB,a,QCTEK,EAAYC,gBAAK,kBACrB,gCAGIC,EAAeD,gBAAK,kBACxB,gCAGIE,E,2MAiBJL,MAAQ,CACNM,aAAc,M,EAYhBC,SAAW,WAAO,IAAD,EACe,EAAKC,MAA3BC,EADO,EACPA,QAASZ,EADF,EACEA,SAEbA,EAASG,MACXS,EAAQC,KAAKb,EAASG,MAAMC,MAI9BQ,EAAQC,KAAK,Y,mFAjBM,IAAD,OACVC,EAAUC,KAAKJ,MAAfG,MACRE,IAA2BF,EAAMG,OAAOlB,SACrCmB,MAAK,SAAAC,GAAG,OAAI,EAAKC,SAAS,CAAEX,aAAcU,EAAIE,UAC9CC,OAAM,SAAAC,GACL,MAAM,IAAIC,MAAMD,Q,+BAeZ,IAAD,EACqBR,KAAKJ,MAAzBG,EADD,EACCA,MAAOd,EADR,EACQA,SACPS,EAAiBM,KAAKZ,MAAtBM,aAER,OACE,oCACGA,GACC,oCACE,4BAAQgB,KAAK,SAASC,QAASX,KAAKL,UAApC,WAGA,4BAAKD,EAAakB,gBAClB,iDAAmBlB,EAAamB,eAChC,wCACA,2BAAInB,EAAaoB,UACjB,sCACCpB,EAAaqB,OAAOC,OAAS,GAC5B,4BACGtB,EAAaqB,OAAOE,KAAI,SAAAC,GAAK,OAC5B,wBAAIC,IAAKD,EAAMtC,IAAKsC,EAAME,UAIhC,yBACEC,IAAG,yCAAoC3B,EAAa4B,aACpDC,IAAK7B,EAAakB,iBAEpB,kBAAC,EAAD,CACE5B,QAASe,EAAMG,OAAOlB,QACtBC,SAAUA,IAEZ,kBAAC,WAAD,CAAUuC,SAAU,2CAClB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,wBAAwBC,UAAWpC,IAC/C,kBAAC,IAAD,CACEmC,KAAK,2BACLC,UAAWlC,Y,GA7EEmC,aAuFhBlC","file":"static/js/movie-details-page.90c2bcb5.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'e0c73a674fe9ac3d07ab423a32b0f862';\n\nexport const fetchMostPopularMovies = () => {\n  return axios.get(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`);\n};\n\nexport const fetchMovieByQuery = query => {\n  return axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`,\n  );\n};\n\nexport const fetchDetailsAboutMovie = id => {\n  return axios.get(`${BASE_URL}/movie/${id}?api_key=${API_KEY}`);\n};\n\nexport const fetchMovieCast = id => {\n  return axios.get(`${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`);\n};\n\nexport const fetchMovieReviews = id => {\n  return axios.get(`${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`);\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport T from 'prop-types';\n\nconst AdditionalInformation = ({ movieId, location }) => (\n  <div>\n    <Link\n      to={{\n        pathname: `/movies/${movieId}/cast`,\n        state: { from: { ...location } },\n      }}\n    >\n      Cast\n    </Link>\n    <br />\n    <Link\n      to={{\n        pathname: `/movies/${movieId}/reviews`,\n        state: { from: { ...location } },\n      }}\n    >\n      Reviews\n    </Link>\n  </div>\n);\n\nAdditionalInformation.propTypes = {\n  movieId: T.string.isRequired,\n  location: T.shape({\n    state: T.shape({\n      from: T.shape({}),\n    }),\n  }).isRequired,\n};\n\nexport default AdditionalInformation;\n","import React, { Component, lazy, Suspense } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport T from 'prop-types';\nimport AdditionalInformation from '../components/AdditionalInformation/AdditionalInformation';\nimport * as API from '../services/movie_api';\n\nconst AsyncCast = lazy(() =>\n  import('./Cast' /* webpackChunkName: \"cast-page\" */),\n);\n\nconst AsyncRewiews = lazy(() =>\n  import('./Reviews' /* webpackChunkName: \"reviews-page\" */),\n);\n\nclass MovieDetailsPage extends Component {\n  static propTypes = {\n    match: T.shape({\n      params: T.shape({\n        movieId: T.string,\n      }),\n    }).isRequired,\n    history: T.shape({\n      push: T.func,\n    }).isRequired,\n    location: T.shape({\n      state: T.shape({\n        from: T.shape({}),\n      }),\n    }).isRequired,\n  };\n\n  state = {\n    movieDetails: null,\n  };\n\n  componentDidMount() {\n    const { match } = this.props;\n    API.fetchDetailsAboutMovie(match.params.movieId)\n      .then(res => this.setState({ movieDetails: res.data }))\n      .catch(err => {\n        throw new Error(err);\n      });\n  }\n\n  onGoBack = () => {\n    const { history, location } = this.props;\n\n    if (location.state) {\n      history.push(location.state.from);\n      return;\n    }\n\n    history.push('/movies');\n  };\n\n  render() {\n    const { match, location } = this.props;\n    const { movieDetails } = this.state;\n\n    return (\n      <>\n        {movieDetails && (\n          <>\n            <button type=\"button\" onClick={this.onGoBack}>\n              Go back\n            </button>\n            <h2>{movieDetails.original_title}</h2>\n            <p>{`User score: ${movieDetails.vote_average}`}</p>\n            <h3>Overview</h3>\n            <p>{movieDetails.overview}</p>\n            <h4>Genres</h4>\n            {movieDetails.genres.length > 0 && (\n              <ul>\n                {movieDetails.genres.map(genre => (\n                  <li key={genre.id}>{genre.name}</li>\n                ))}\n              </ul>\n            )}\n            <img\n              src={`https://image.tmdb.org/t/p/w300${movieDetails.poster_path}`}\n              alt={movieDetails.original_title}\n            />\n            <AdditionalInformation\n              movieId={match.params.movieId}\n              location={location}\n            />\n            <Suspense fallback={<h2>Loading...</h2>}>\n              <Switch>\n                <Route path=\"/movies/:movieId/cast\" component={AsyncCast} />\n                <Route\n                  path=\"/movies/:movieId/reviews\"\n                  component={AsyncRewiews}\n                />\n              </Switch>\n            </Suspense>\n          </>\n        )}\n      </>\n    );\n  }\n}\nexport default MovieDetailsPage;\n"],"sourceRoot":""}