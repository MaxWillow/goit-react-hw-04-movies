{"version":3,"sources":["pages/Reviews.jsx","services/movie_api.js"],"names":["Reviews","state","reviews","error","match","this","props","API","params","movieId","then","res","setState","data","results","catch","err","message","length","map","review","key","id","author","content","Component","BASE_URL","API_KEY","fetchMostPopularMovies","axios","get","fetchMovieByQuery","query","fetchDetailsAboutMovie","fetchMovieCast","fetchMovieReviews"],"mappings":"gMAIMA,E,2MASJC,MAAQ,CACNC,QAAS,GACTC,MAAO,M,mFAGY,IAAD,OACVC,EAAUC,KAAKC,MAAfF,MAERG,IAAsBH,EAAMI,OAAOC,SAChCC,MAAK,SAAAC,GAAG,OAAI,EAAKC,SAAS,CAAEV,QAASS,EAAIE,KAAKC,aAC9CC,OAAM,SAAAC,GAAG,OACR,EAAKJ,SAAS,CACZT,MAAOa,EAAIC,e,+BAKT,IAAD,EACoBZ,KAAKJ,MAAxBC,EADD,EACCA,QAASC,EADV,EACUA,MAEjB,OACE,6BACGA,GAAS,8EACTD,EAAQgB,OAAS,EAChB,4BACGhB,EAAQiB,KAAI,SAAAC,GAAM,OACjB,wBAAIC,IAAKD,EAAOE,IACd,6CAAeF,EAAOG,SACtB,2BAAIH,EAAOI,cAKjB,4F,GA1CYC,aAiDPzB,a,gCCrDf,+LAEM0B,EAAW,+BACXC,EAAU,mCAEHC,EAAyB,WACpC,OAAOC,IAAMC,IAAN,UAAaJ,EAAb,uCAAoDC,KAGhDI,EAAoB,SAAAC,GAC/B,OAAOH,IAAMC,IAAN,UACFJ,EADE,iCAC+BC,EAD/B,kBACgDK,KAI5CC,EAAyB,SAAAX,GACpC,OAAOO,IAAMC,IAAN,UAAaJ,EAAb,kBAA+BJ,EAA/B,oBAA6CK,KAGzCO,EAAiB,SAAAZ,GAC5B,OAAOO,IAAMC,IAAN,UAAaJ,EAAb,kBAA+BJ,EAA/B,4BAAqDK,KAGjDQ,EAAoB,SAAAb,GAC/B,OAAOO,IAAMC,IAAN,UAAaJ,EAAb,kBAA+BJ,EAA/B,4BAAqDK","file":"static/js/reviews-page.e235a213.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport T from 'prop-types';\nimport * as API from '../services/movie_api';\n\nclass Reviews extends Component {\n  static propTypes = {\n    match: T.shape({\n      params: T.shape({\n        movieId: T.string,\n      }),\n    }).isRequired,\n  };\n\n  state = {\n    reviews: [],\n    error: null,\n  };\n\n  componentDidMount() {\n    const { match } = this.props;\n\n    API.fetchMovieReviews(match.params.movieId)\n      .then(res => this.setState({ reviews: res.data.results }))\n      .catch(err =>\n        this.setState({\n          error: err.message,\n        }),\n      );\n  }\n\n  render() {\n    const { reviews, error } = this.state;\n\n    return (\n      <div>\n        {error && <h2>Ups! Something went wrong... Please try again!</h2>}\n        {reviews.length > 0 ? (\n          <ul>\n            {reviews.map(review => (\n              <li key={review.id}>\n                <p>{`Author: ${review.author}`}</p>\n                <p>{review.content}</p>\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <p>We do not have any reviews for this movie. Be the first!</p>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'e0c73a674fe9ac3d07ab423a32b0f862';\n\nexport const fetchMostPopularMovies = () => {\n  return axios.get(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`);\n};\n\nexport const fetchMovieByQuery = query => {\n  return axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`,\n  );\n};\n\nexport const fetchDetailsAboutMovie = id => {\n  return axios.get(`${BASE_URL}/movie/${id}?api_key=${API_KEY}`);\n};\n\nexport const fetchMovieCast = id => {\n  return axios.get(`${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`);\n};\n\nexport const fetchMovieReviews = id => {\n  return axios.get(`${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`);\n};\n"],"sourceRoot":""}