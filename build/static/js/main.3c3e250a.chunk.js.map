{"version":3,"sources":["components/Navigation/Navigation.module.css","components/Navigation/Navigation.jsx","services/movie_api.js","pages/HomePage.jsx","components/SearchBar/SearchBar.jsx","pages/MoviesPage.jsx","components/AdditionalInformation/AdditionalInformation.jsx","pages/Cast.jsx","pages/Reviews.jsx","pages/MovieDetailsPage.jsx","components/App.jsx","index.js"],"names":["module","exports","Navigation","className","styles","list","to","exact","activeClassName","link","BASE_URL","API_KEY","fetchMovieByQuery","query","axios","get","HomePage","state","movies","then","res","setState","data","results","catch","err","Error","this","location","props","length","map","movie","key","id","pathname","from","title","Component","SeacrhBar","value","handleChange","e","target","handleSubmit","preventDefault","onSubmit","onChange","type","Movies","onSearch","API","history","push","search","searchParams","URLSearchParams","match","url","AdditionalInformation","movieId","Cast","castList","params","cast","el","src","profile_path","alt","name","character","Reviews","reviews","review","author","content","MovieDetailsPage","movieDetails","onGoBack","onClick","original_title","vote_average","overview","genres","genre","poster_path","path","component","App","MoviesPage","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3c3e250a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Navigation_list__3uKgi\",\"link\":\"Navigation_link__DVj_N\"};","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport styles from './Navigation.module.css';\n\nconst Navigation = () => (\n  <nav>\n    <ul className={styles.list}>\n      <li>\n        <NavLink to=\"/\" exact activeClassName={styles.link}>\n          Home\n        </NavLink>\n      </li>\n      <li>\n        <NavLink to=\"/movies\" activeClassName={styles.link}>\n          Movies\n        </NavLink>\n      </li>\n    </ul>\n  </nav>\n);\n\nexport default Navigation;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'e0c73a674fe9ac3d07ab423a32b0f862';\n\nexport const fetchMostPopularMovies = () => {\n  return axios.get(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`);\n};\n\nexport const fetchMovieByQuery = query => {\n  return axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`,\n  );\n};\n\nexport const fetchDetailsAboutMovie = id => {\n  return axios.get(`${BASE_URL}/movie/${id}?api_key=${API_KEY}`);\n};\n\nexport const fetchMovieCast = id => {\n  return axios.get(`${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`);\n};\n\nexport const fetchMovieReviews = id => {\n  return axios.get(`${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`);\n};\n","import React, { Component } from 'react';\nimport T from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport * as API from '../services/movie_api';\n\nclass HomePage extends Component {\n  static propTypes = {\n    location: T.shape({\n      state: T.shape({\n        from: T.shape({}),\n      }),\n    }).isRequired,\n  };\n\n  state = {\n    movies: [],\n  };\n\n  componentDidMount() {\n    API.fetchMostPopularMovies()\n      .then(res => this.setState({ movies: res.data.results }))\n      .catch(err => {\n        throw new Error(err);\n      });\n  }\n\n  render() {\n    const { movies } = this.state;\n    const { location } = this.props;\n\n    return (\n      <div>\n        <h2>Trending today</h2>\n        {movies.length > 0 && (\n          <ul>\n            {movies.map(movie => (\n              <li key={movie.id}>\n                <Link\n                  to={{\n                    pathname: `/movies/${movie.id}`,\n                    state: { from: { ...location } },\n                  }}\n                >\n                  {movie.title}\n                </Link>\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default HomePage;\n","import React, { Component } from 'react';\nimport T from 'prop-types';\n\nclass SeacrhBar extends Component {\n  static propTypes = {\n    onSubmit: T.func.isRequired,\n  };\n\n  state = {\n    value: '',\n  };\n\n  handleChange = e => {\n    this.setState({\n      value: e.target.value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { onSubmit } = this.props;\n    const { value } = this.state;\n    onSubmit(value);\n    this.setState({\n      value: '',\n    });\n  };\n\n  render() {\n    const { value } = this.state;\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <input value={value} onChange={this.handleChange} />\n        <button type=\"submit\">Search</button>\n      </form>\n    );\n  }\n}\n\nexport default SeacrhBar;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport T from 'prop-types';\nimport Searchbar from '../components/SearchBar/SearchBar';\nimport * as API from '../services/movie_api';\n\nclass Movies extends Component {\n  static propTypes = {\n    match: T.shape({\n      url: T.string.isRequired,\n      params: T.shape({\n        movieId: T.string,\n      }),\n    }).isRequired,\n    history: T.shape({\n      push: T.func,\n    }).isRequired,\n    location: T.shape({\n      search: T.string.isRequired,\n      state: T.shape({\n        from: T.shape({}),\n      }),\n    }).isRequired,\n  };\n\n  state = {\n    movies: [],\n  };\n\n  componentDidMount() {\n    const { location } = this.props;\n\n    if (location.search) {\n      const searchParams = new URLSearchParams(location.search).get('query');\n      this.onSearch(searchParams);\n    }\n  }\n\n  onSearch = query => {\n    API.fetchMovieByQuery(query)\n      .then(res => {\n        this.setState({\n          movies: res.data.results,\n        });\n        const { location, history } = this.props;\n        history.push({\n          ...location,\n          search: `query=${query}`,\n        });\n      })\n      .catch(err => {\n        throw new Error(err);\n      });\n  };\n\n  render() {\n    const { movies } = this.state;\n    const { match, location } = this.props;\n\n    return (\n      <div>\n        <Searchbar onSubmit={this.onSearch} />\n        {movies.length > 0 && (\n          <ul>\n            {movies.map(movie => (\n              <li key={movie.id}>\n                <Link\n                  to={{\n                    pathname: `${match.url}/${movie.id}`,\n                    state: { from: { ...location } },\n                  }}\n                >\n                  {movie.title}\n                </Link>\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Movies;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport T from 'prop-types';\n\nconst AdditionalInformation = ({ movieId, location }) => (\n  <div>\n    <Link\n      to={{\n        pathname: `/movies/${movieId}/cast`,\n        state: { from: { ...location } },\n      }}\n    >\n      Cast\n    </Link>\n    <br />\n    <Link\n      to={{\n        pathname: `/movies/${movieId}/reviews`,\n        state: { from: { ...location } },\n      }}\n    >\n      Reviews\n    </Link>\n  </div>\n);\n\nAdditionalInformation.propTypes = {\n  movieId: T.string.isRequired,\n  location: T.shape({\n    state: T.shape({\n      from: T.shape({}),\n    }),\n  }).isRequired,\n};\n\nexport default AdditionalInformation;\n","import React, { Component } from 'react';\nimport T from 'prop-types';\nimport * as API from '../services/movie_api';\n\nclass Cast extends Component {\n  static propTypes = {\n    match: T.shape({\n      params: T.shape({\n        movieId: T.string,\n      }),\n    }).isRequired,\n  };\n\n  state = {\n    castList: [],\n  };\n\n  componentDidMount() {\n    const { match } = this.props;\n\n    API.fetchMovieCast(match.params.movieId)\n      .then(res => this.setState({ castList: res.data.cast }))\n      .catch(err => {\n        throw new Error(err);\n      });\n  }\n\n  render() {\n    const { castList } = this.state;\n\n    return (\n      <div>\n        {castList.length > 0 && (\n          <ul>\n            {castList.map(el => (\n              <li key={el.id}>\n                <img\n                  src={`https://image.tmdb.org/t/p/w200${el.profile_path}`}\n                  alt={el.name}\n                />\n                <p>{el.name}</p>\n                <p>{`Character: ${el.character}`}</p>\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Cast;\n","import React, { Component } from 'react';\nimport T from 'prop-types';\nimport * as API from '../services/movie_api';\n\nclass Reviews extends Component {\n  static propTypes = {\n    match: T.shape({\n      params: T.shape({\n        movieId: T.string,\n      }),\n    }).isRequired,\n  };\n\n  state = {\n    reviews: [],\n  };\n\n  componentDidMount() {\n    const { match } = this.props;\n\n    API.fetchMovieReviews(match.params.movieId)\n      .then(res => this.setState({ reviews: res.data.results }))\n      .catch(err => {\n        throw new Error(err);\n      });\n  }\n\n  render() {\n    const { reviews } = this.state;\n\n    return (\n      <div>\n        {reviews.length > 0 ? (\n          <ul>\n            {reviews.map(review => (\n              <li key={review.id}>\n                <p>{`Author: ${review.author}`}</p>\n                <p>{review.content}</p>\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <p>We do not have any reviews for this movie. Be the first!</p>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Reviews;\n","import React, { Component } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport T from 'prop-types';\nimport AdditionalInformation from '../components/AdditionalInformation/AdditionalInformation';\nimport * as API from '../services/movie_api';\nimport Cast from './Cast';\nimport Reviews from './Reviews';\n\nclass MovieDetailsPage extends Component {\n  static propTypes = {\n    match: T.shape({\n      params: T.shape({\n        movieId: T.string,\n      }),\n    }).isRequired,\n    history: T.shape({\n      push: T.func,\n    }).isRequired,\n    location: T.shape({\n      state: T.shape({\n        from: T.shape({}),\n      }),\n    }).isRequired,\n  };\n\n  state = {\n    movieDetails: null,\n  };\n\n  componentDidMount() {\n    const { match } = this.props;\n    API.fetchDetailsAboutMovie(match.params.movieId)\n      .then(res => this.setState({ movieDetails: res.data }))\n      .catch(err => {\n        throw new Error(err);\n      });\n  }\n\n  onGoBack = () => {\n    const { history, location } = this.props;\n\n    if (location.state) {\n      history.push(location.state.from);\n      return;\n    }\n\n    history.push('/movies');\n  };\n\n  render() {\n    const { match, location } = this.props;\n    const { movieDetails } = this.state;\n\n    return (\n      <>\n        {movieDetails && (\n          <>\n            <button type=\"button\" onClick={this.onGoBack}>\n              Go back\n            </button>\n            <h2>{movieDetails.original_title}</h2>\n            <p>{`User score: ${movieDetails.vote_average}`}</p>\n            <h3>Overview</h3>\n            <p>{movieDetails.overview}</p>\n            <h4>Genres</h4>\n            {movieDetails.genres.length > 0 && (\n              <ul>\n                {movieDetails.genres.map(genre => (\n                  <li key={genre.id}>{genre.name}</li>\n                ))}\n              </ul>\n            )}\n            <img\n              src={`https://image.tmdb.org/t/p/w300${movieDetails.poster_path}`}\n              alt={movieDetails.original_title}\n            />\n            <AdditionalInformation\n              movieId={match.params.movieId}\n              location={location}\n            />\n            <Switch>\n              <Route path=\"/movies/:movieId/cast\" component={Cast} />\n              <Route path=\"/movies/:movieId/reviews\" component={Reviews} />\n            </Switch>\n          </>\n        )}\n      </>\n    );\n  }\n}\nexport default MovieDetailsPage;\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport Navigation from './Navigation/Navigation';\nimport HomePage from '../pages/HomePage';\nimport MoviesPage from '../pages/MoviesPage';\nimport MovieDetailsPage from '../pages/MovieDetailsPage';\n\nconst App = () => (\n  <div>\n    <Navigation />\n    <Switch>\n      <Route path=\"/\" exact component={HomePage} />\n      <Route path=\"/movies/:movieId\" component={MovieDetailsPage} />\n      <Route path=\"/movies\" component={MoviesPage} />\n      <Redirect to=\"/\" />\n    </Switch>\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}